// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ReturnedCount extends ethereum.Event {
  get params(): ReturnedCount__Params {
    return new ReturnedCount__Params(this);
  }
}

export class ReturnedCount__Params {
  _event: ReturnedCount;

  constructor(event: ReturnedCount) {
    this._event = event;
  }

  get count(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Simple2 extends ethereum.SmartContract {
  static bind(address: Address): Simple2 {
    return new Simple2("Simple2", address);
  }

  getSingature(): Bytes {
    let result = super.call("getSingature", "getSingature():(bytes32)", []);

    return result[0].toBytes();
  }

  try_getSingature(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("getSingature", "getSingature():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getCalldata(): Bytes {
    let result = super.call("getCalldata", "getCalldata():(bytes)", []);

    return result[0].toBytes();
  }

  try_getCalldata(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("getCalldata", "getCalldata():(bytes)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }
}

export class GetSingatureCall extends ethereum.Call {
  get inputs(): GetSingatureCall__Inputs {
    return new GetSingatureCall__Inputs(this);
  }

  get outputs(): GetSingatureCall__Outputs {
    return new GetSingatureCall__Outputs(this);
  }
}

export class GetSingatureCall__Inputs {
  _call: GetSingatureCall;

  constructor(call: GetSingatureCall) {
    this._call = call;
  }
}

export class GetSingatureCall__Outputs {
  _call: GetSingatureCall;

  constructor(call: GetSingatureCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}
